// src/proto/user.proto
syntax = "proto3";

package application;

service ApplicationService {
  rpc getAllApplications (Empty) returns (ApplicationsResponse);
  rpc getApplicationsByUser (getApplicationsByUserRequest) returns (ApplicationsPageResponse);
  rpc getApplicationsByAdvertisement (getApplicationsByAdvertisementRequest) returns (ApplicationsPageResponse);
  rpc apply (applyRequest) returns (Empty);
  rpc refuseApplication (withIdRequest) returns (Empty);
  rpc acceptApplication (withIdRequest) returns (Empty);
  rpc deleteApplication (withIdRequest) returns (Empty);
}

// =========================================
// Data Objects
// =========================================

message Empty {}

message State {
  string uf = 1;
}

message City {
  string name = 1;
}

message Advertisement {
  int32 id = 1;
  string title = 2;
  float price = 3;
  string imgSrc = 4;
  bool isActive = 5;
  City city = 6;
  State state = 7;
}

message Applicant {
  int32 id = 1;
  string name = 2;
  string imgSrc = 3;
}

message Application {
  int32 id = 1;
  string status = 2;
  string message = 3;
  string createdAt = 4;
  Applicant applicant = 5;
  Advertisement advertisement = 6;
}

message CreateApplicationDto {
  int32 advertisementId = 1;
  string message = 2;
}

// =========================================
// Requests
// =========================================

message getApplicationsByUserRequest {
  int32 userId = 1;
}

message getApplicationsByAdvertisementRequest {
  int32 advertisementId = 1;
}

message applyRequest {
  int32 userId = 1;
  CreateApplicationDto body = 2;
}

message withIdRequest {
  int32 id = 1;
}

// =========================================
// Responses
// =========================================

message ApplicationsResponse {
  repeated Application applications = 1;
}

message ApplicationsPageResponse {
  int32 total = 1;
  repeated Application applications = 2;
}