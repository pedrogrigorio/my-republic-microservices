// src/proto/user.proto
syntax = "proto3";

package user;

service UserService {
  rpc signUp (SignUpRequest) returns (Empty);
  rpc getAllUsers (Empty) returns (UserListResponse);
  rpc getUserById (GetUserByIdRequest) returns (UserResponse);
  rpc updateName (UpdateNameRequest) returns (Empty);
  rpc updateEmail (UpdateEmailRequest) returns (Empty);
  rpc updatePassword (UpdatePasswordRequest) returns (Empty);
  rpc updatePhoto (UpdatePhotoRequest) returns (Empty);
  rpc deleteUser (DeleteUserRequest) returns (Empty);
  rpc validateUser (ValidateUserRequest) returns (UserResponse);
}

message Empty {}

message UpdateNameDto {
  string newName = 1;
}

message UpdateEmailDto {
  string newEmail = 1;
}

message UpdatePasswordDto {
  string oldPassword = 1;
  string newPassword = 2;
  string confirmNewPassword = 3;
}

message FileDto {
  string buffer = 1;
  string mimetype = 2;
  string name = 3;
}

// Requests

message SignUpRequest {
  string name = 1;
  string email = 2;
  string password = 3;
  string passwordConfirm = 4;
  string gender = 5;
}

message UpdateNameRequest {
  UpdateNameDto body = 1;
  int32 id = 2;
}

message UpdateEmailRequest {
  UpdateEmailDto body = 1;
  int32 id = 2;
}

message UpdatePasswordRequest {
  UpdatePasswordDto body = 1;
  int32 id = 2;
}

message UpdatePhotoRequest {
  int32 id = 1;
  FileDto file = 2;
}

message GetUserByIdRequest {
  int32 id = 1;
}

message DeleteUserRequest {
  int32 id = 1;
}

message ValidateUserRequest {
  string email = 1;
  string password = 2;
}

// Responses
message User {
  int32 id = 1;
  string name = 2;
  string email = 3;
  string imgSrc = 4;
  string gender = 5; 
}

message UserResponse {
  User user = 1; // Dados do usuário
}

message UserListResponse {
  repeated User users = 1; // Lista de usuários
}